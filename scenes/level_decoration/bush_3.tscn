[gd_scene load_steps=6 format=3 uid="uid://brh26l2u7pq6t"]

[ext_resource type="Texture2D" uid="uid://c1p0aqp2hu4tm" path="res://assets/Level Decoration/bush_3.png" id="1_e1377"]

[sub_resource type="Shader" id="Shader_e1377"]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    // Create pseudo-random offset using vertex position
    vec2 pos = VERTEX.xy * 0.01; // Scale down the position
    float randomTime = sin(pos.x * 127.1 + pos.y * 311.7) * 43758.5453;
    randomTime = fract(randomTime) * 6.28; // Random value between 0 and 2Ï€
    
    float time = TIME * speed + offset + randomTime;
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6ydeq"]
shader = SubResource("Shader_e1377")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = 0.0
shader_parameter/heightOffset = 0.0
shader_parameter/offset = 0.0

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_mfc15"]
radius = 17.0
height = 114.0

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_ioo17"]
radius = 29.0
height = 116.0

[node name="Bush3" type="StaticBody2D"]
material = SubResource("ShaderMaterial_6ydeq")
collision_layer = 0
collision_mask = 0

[node name="Sprite" type="Sprite2D" parent="."]
position = Vector2(13, -39)
texture = ExtResource("1_e1377")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(9, -14.5)
rotation = 1.5707964
shape = SubResource("CapsuleShape2D_mfc15")

[node name="InteractiveArea2D" type="Area2D" parent="." groups=["too_close_bubble"]]
position = Vector2(-4, -181.5)

[node name="CollisionShape2D" type="CollisionShape2D" parent="InteractiveArea2D"]
position = Vector2(16, 151.5)
rotation = 1.5707964
shape = SubResource("CapsuleShape2D_ioo17")
debug_color = Color(0, 0.6, 0.69803923, 0.28235295)

[connection signal="body_entered" from="InteractiveArea2D" to="." method="_on_interactive_area_2d_body_entered"]
[connection signal="body_exited" from="InteractiveArea2D" to="." method="_on_interactive_area_2d_body_exited"]
